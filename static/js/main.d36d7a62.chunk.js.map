{"version":3,"sources":["components/Header/Header.module.scss","components/CreatePost/CreatePost.module.scss","pages/Home/Home.module.scss","components/Footer/Footer.module.scss","components/FriendPreview/FriendPreview.module.scss","components/MessagePreview/MessagePreview.module.scss","components/Post/Post.module.scss","components/Header/Header.js","components/Footer/Footer.js","libs/http.js","components/CreatePost/index.jsx","components/FriendPreview/index.jsx","components/Date/Date.jsx","components/MessagePreview/index.jsx","components/Post/index.jsx","pages/Home/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","props","name","links","link","label","CheckActive","resolved","useResolvedPath","useMatch","path","pathname","end","styles","active","className","header","map","item","index","to","Footer","year","Date","getFullYear","footer","BASE_URL","http","resource","fetch","then","response","json","CreatePost","useState","authorInput","setAuthorInput","imgInput","setImgInput","messageInput","setMessageInput","formPostObj","setFormPostObj","useEffect","authot","text","date","toISOString","photo","createPost","__author","value","onChange","e","target","id","type","placeholder","required","onClick","event","data","preventDefault","method","headers","body","JSON","stringify","alert","cols","rows","FriendPreview","friend","src","alt","DateInfo","formatRelative","relative","addSuffix","locale","it","MessagePreview","sender","message","Post","author","post","friends","messages","posts","Home","friendsPreview","setFriendsPreview","allPosts","setAllPosts","messagesPreview","setMessagesPreview","home","grid","INIT_STATE","nav","reducer","state","action","App","useReducer","dispatch","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d36d7a62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"active\":\"Header_active__3GX0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createPost\":\"CreatePost_createPost__3XCbM\",\"__author\":\"CreatePost___author__2lcbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JXvv\",\"grid\":\"Home_grid__sUtIT\",\"friend\":\"Home_friend__eOEhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendPreview_friend__3Gjby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessagePreview_message__3j9dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3hqZB\"};","import { Link, useMatch, useResolvedPath } from \"react-router-dom\";\nimport styles from \"./Header.module.scss\";\n\nconst Header = (props) => {\n\n    //! SINTASSI PRECEDENTE ALL'AGGIUNTA DELLE PROPS:\n    // const links = [\n    //     { link: '/home', label: 'Home' },\n    //     { link: '/friends', label: 'Friends' },\n    //     { link: '/messages', label: 'Messages' }\n    // ];\n\n    //? Cosa succede se non passo dei valori alle props? Per evitare errori e di rompere il codice:\n    const name = props.name || 'App';                               \n    const links = props.links || [{ link: \"/\", label: \"Link\" }];    \n    //* se le props sono undefined indico di andare a prendere il valore da App\n    //* in tal modo ci saranno sempre dei valori predefiniti già settati\n\n    const CheckActive = (link) => {\n        const resolved = useResolvedPath(link);\n        const match = useMatch({path: resolved.pathname, end: true});\n\n        return match ? styles.active : \"\";\n    };\n\n    //! SINTASSI PRECEDENTE ALLA RIMOZIONE DELLE PROPS DAL JSX => {props.name} e {props.links.map}\n\n    return (\n        <header className={styles.header}>\n            <h1>{name}</h1>\n            <nav>\n                <ul>\n                    {links.map((item, index) => (\n                    <li key={index}>                            \n                        <Link className={CheckActive(item.link)} to={item.link}>{item.label}</Link>\n                    </li>\n                    ))}\n                    {/* N.B. la chiave (KEY) permette di distinguere il singolo elemento nell'iterazione \n                    e va inserita nell'elemento più alto, in questo caso <li> */}\n                    {/* SINTASSI PRECEDENTE => \n                    <li>\n                        <a href=\"/home\">Home</a>\n                    </li>\n                    <li>\n                        <a href=\"/friends\">Friends</a>\n                    </li>\n                    <li>\n                        <a href=\"/messages\">Messages</a>\n                    </li> */}\n                </ul>\n            </nav>\n        </header>\n    );\n};\n\nexport default Header;\n\n//* l'export di default in genere si usa di più quando si ha un file\n//* dal quale si esporta un solo modulo\n//! nel caso dell'export di default il nome non è vincolante\n//* se l'export è con le graffe si può usare la sintassi export {x as y} per esportarlo\n//* con un nome diverso","import styles from './Footer.module.scss';\n\nconst Footer = () => {\n    const year = new Date().getFullYear();                  //* per renderizzare sempre la data attuale\n    return (\n    <footer className={styles.footer}>\n        <hr />\n        <p>Copyright Edgemony - {year}</p>\n    </footer>\n    );\n};\n\n//* il module.scss fa in modo che non ci siano mai due moduli con la stessa classe e lo stesso hash\n// quindi si va a ridurre il rischio ed eventuali pericoli derivanti da conflitti nel css\n\nexport default Footer;","const BASE_URL = 'https://edgemony-backend.herokuapp.com';\n\nconst http = (resource) => fetch(BASE_URL + resource)\n    .then(response => response.json());\n\nconst httpPost = (resource, data) =>\n    fetch(BASE_URL + resource, {\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => response.json());\n\nexport { http, httpPost };\n","import { useState, useEffect } from 'react';\nimport { httpPost } from '../../libs/http';\nimport styles from './CreatePost.module.scss';\n\nconst CreatePost = () => {\n    const [authorInput, setAuthorInput] = useState('');\n    const [imgInput, setImgInput] = useState('');\n    const [messageInput, setMessageInput] = useState('');\n    const [formPostObj, setFormPostObj] = useState({});\n\n    // const handleAuthorInput = (event) => setAuthorInput(event.target.value); <= PREV.VALUE \n    // const handleImgInput = (event) => setImgInput(event.target.value);\n    // const handleMessageInput = (event) => setMessageInput(event.target.value);\n    const handleSendBtn = (event) => {\n        event.preventDefault();\n        httpPost('/posts', formPostObj);\n        alert('Your post has been created');\n\n        //      setFormPostObj({\n        //          authot: authorInput,\n        //          text: messageInput,\n        //          date: new Date().toISOString(),\n        //          photo: imgInput\n        //      });\n    };\n\n    useEffect(() => {\n        setFormPostObj({\n            authot: authorInput,\n            text: messageInput,\n            date: new Date().toISOString(),\n            photo: imgInput\n        });\n    }, [authorInput, imgInput, messageInput])\n\n    return (\n        <div className={styles.createPost}>\n            <form>\n                <div className={styles.__author}>\n                    <input\n                        value={authorInput}\n                        onChange={(e) => setAuthorInput(e.target.value)}\n                        name='author'\n                        id='author'\n                        type='text'\n                        placeholder='Author'\n                        required />\n\n                    <input\n                        value={imgInput}\n                        onChange={(e) => setImgInput(e.target.value)}\n                        name='img'\n                        id='img'\n                        type='img'\n                        placeholder='Img URL' />\n\n                    <button onClick={handleSendBtn} type='submit'>\n                        SEND\n                    </button>\n                </div>\n\n                <textarea\n                    value={messageInput}\n                    onChange={(e) => setMessageInput(e.target.value)}\n                    name='message'\n                    id='message'\n                    type='text'\n                    cols='30'\n                    rows='10'\n                    placeholder='message'\n                    required>\n                </textarea>\n            </form>\n        </div>\n    )\n};\n\nexport default CreatePost;","import styles from \"./FriendPreview.module.scss\";\n\nconst FriendPreview = (props) => {\n    const data = props.data || {\n        name: 'Friend', \n        photo: 'https://64.media.tumblr.com/5d61946de95c9cc2bfd6107c122230ac/540f0b61cb5a11f6-85/s400x600/091bc0e2aa27eae3304290cd1fd59b22ea262b9c.png'\n    };                                                              // <= DATI DI PLACEHOLDER\n    return (\n        <div className={styles.friend}>\n            <img src={data.photo} alt={data.name} />\n            <p>{data.name}</p>\n        </div>\n    );\n};\n\nexport default FriendPreview;","import { formatRelative } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\n\nconst DateInfo = (props) => {\n    return (\n        <>\n            {formatRelative(new Date(props.relative), new Date(), { addSuffix: true, locale: it })}\n        </>\n    );\n};\n\nexport { DateInfo };","import styles from \"./MessagePreview.module.scss\";\nimport { DateInfo } from \"./../Date/Date.jsx\";\n\nconst MessagePreview = (props) => {\n    const data = props.data || {\n        text: 'lorem ipsum', date: new Date(), sender: 'user',\n    };\n\n    return (\n        <div className={styles.message}>\n            <h5>{data.sender}</h5>\n            <p>\n                <small><DateInfo relative={data.date} /></small>\n            </p>\n            <p>{data.text}</p>\n        </div>\n    );\n};\n\nexport { MessagePreview };","import styles from './Post.module.scss';\nimport { DateInfo } from \"./../Date/Date.jsx\";\n\nconst Post = (props) => {\n    const data = props.data || {\n        author: 'user',\n        text: 'text',\n        date: new Date(),\n        photo: 'https://images.unsplash.com/photo-1511149672083-577ee63de3dc?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1169&q=80'\n    };\n\n    return (\n        <article className={styles.post}>\n            <h3>{data.author}</h3>\n            <p>\n                <small>{data.date ? <DateInfo relative={data.date}/> : <></>}</small>\n            </p>\n            <p>{data.text}</p>\n\n            {data.photo ? <img src={data.photo} alt={data.author} /> : <></>}\n        </article>\n    );\n};\n\nexport { Post };","import { useState, useEffect } from 'react';\nimport FriendPreview from '../../components/FriendPreview';\nimport { MessagePreview } from '../../components/MessagePreview';\nimport styles from './Home.module.scss';\nimport { Post } from '../../components/Post';\nimport { http } from '../../libs/http';\n\nconst friends = [];\n\nconst messages = [];\n\nconst posts = [];\n\nconst Home = () => {\n    const [friendsPreview, setFriendsPreview] = useState(friends);           // informazione che sarà monitorata dal componente React\n    // equivale a => const friendsPreview = [];\n    const [allPosts, setAllPosts] = useState(posts);\n    const [messagesPreview, setMessagesPreview] = useState(messages);\n\n    //! fetch('https://edgemony-backend.herokuapp.com/friends?_limit=4')\n    //! .then(response => response.json())\n    //! .then(data => setFriendsPreview(data));         \n    //! ^ sposto la funzione in useEffect() perché m'interessa che il codice venga eseguito solo in uno specifico momento\n\n    //* SINTASSI PRE CREAZIONE HTTP.JS\n    // useEffect(() => {\n    //     fetch('https://edgemony-backend.herokuapp.com/friends?_limit=4')\n    //         .then(response => response.json())\n    //         .then(data => setFriendsPreview(data));\n\n    //         fetch('https://edgemony-backend.herokuapp.com/posts')\n    //         .then(response => response.json())\n    //         .then(data => setAllPosts(data));\n\n    //         fetch('https://edgemony-backend.herokuapp.com/messages?_limit=4')\n    //         .then(response => response.json())\n    //         .then(data => setMessagesPreview(data));\n    // }, []);\n\n    //* SINTASSI POST CREAZIONE HTTP.JS\n    useEffect(() => {\n        http('/friends?_limit=4').then(data => setFriendsPreview(data));\n        http('/posts').then(data => setAllPosts(data));\n        http('/messages?_limit=4').then(data => setMessagesPreview(data));\n    }, []);\n\n    return (\n        <section className={styles.home}>\n            <h3>Benvenuto utente!</h3>\n            <div className={styles.grid}>\n                <aside>\n                    {friendsPreview.map((friend, index) => <FriendPreview key={index} data={friend} />)}\n                </aside>\n                <main>\n                    {allPosts.map((post, index) => <Post key={index} data={post} />)}\n                </main>\n                <aside>\n                    {messagesPreview.map((message, index) => <MessagePreview key={index} data={message} />)}\n                </aside>\n            </div>\n        </section>\n    );\n};\n\nexport default Home;\n\n//! RICORDA: UN COMPONENTE JSX DEVE RITORNARE SEMPRE UN SOLO ELEMENTO PARENTE\n\n//* PROPS E STATI\n// Le props dicono \"questi sono dati che vengono dall'esterno del componente\"\n// Lo stato fa il contrario, indica che i dati sono interni al componente e per questo se li manipola lui\n\n//* LINTER - WARNINGS 15/12\n// gli strumenti di linting sono strumenti di controllo stilistico\n// quindi non di qualcosa che non funziona ma di qualcosa che andrebbe fatto meglio\n// nel caso del problema riscontrato il 15/12 si trattava per esempio delle variabili non assegnate","import { Routes, Route } from \"react-router-dom\";\nimport { useReducer } from \"react\";\n\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport CreatePost from \"./components/CreatePost\";\nimport Home from \"./pages/Home\";\n\n// const CheckActive = (link) => {\n//   const resolved = useResolvedPath(link);\n//   const match = useMatch({path: resolved.pathname, end: true});\n\n//   return match ? styles.active : \"\";\n// };\n\nconst INIT_STATE = {\n  name: 'Feisbrut',\n  nav: [\n    { link: '/', label: 'Home' },\n    { link: '/new-post', label: 'Create new post' },\n    { link: '/friends', label: 'Friends' },\n    { link: '/messages', label: 'Messages' }\n  ],\n  friendsPreview: [],\n};\n\nconst reducer = (state, action) => {                                 // l'action è l'oggetto che reducer riceve dal dispatch\n  switch(action.type) {\n    case \"change-name\":\n      return {...state, name: 'Feisbell'};\n    default:\n      return state;\n  }\n};\n\n//* SINTASSI ALTERNATIVA ONCLICK\n// const handleClick = () => dispatch({ type: \"name-change\"});\n// <button onClick={handleClick}>Cambia nome</button>\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, INIT_STATE);\n\n  return (\n    <div>\n      <Header name={state.name} links={state.nav} />\n      <button onClick={() => dispatch({ type: \"change-name\" })}>Cambia nome</button>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/new-post\" element={<CreatePost />} />\n        <Route path=\"/messages\" element={<h3>Messages</h3>} />\n        <Route path=\"/friends\" element={<h3>Friends</h3>} />\n      </Routes>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}