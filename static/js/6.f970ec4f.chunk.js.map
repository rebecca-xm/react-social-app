{"version":3,"sources":["libs/http.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Modal/index.jsx","components/Modal/Modal.module.scss","components/CreatePost/CreatePost.module.scss","components/CreatePost/index.jsx"],"names":["BASE_URL","http","resource","fetch","then","response","json","httpPost","data","method","headers","body","JSON","stringify","httpDELETE","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Modal","bgColor","text","className","styles","style","background","module","exports","initialState","formPostObj","author","photo","date","Date","toISOString","isModalVisible","formReducer","state","action","type","value","payload","CreatePost","useReducer","dispatch","useEffect","createPost","__author","onChange","e","target","name","id","placeholder","required","onClick","preventDefault","setTimeout","cols","rows"],"mappings":"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","file":"static/js/6.f970ec4f.chunk.js","sourcesContent":["const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n  fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPost = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nconst httpDELETE = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n// Popola la lista degli amici, in base alla lista friendsNames\nconst fillFriendsList = (friendsNames) => {\n  let value = 0;\n  for (value in [...Array(friendsNames.length).keys()]) {\n    httpPost(\"/friends\", {\n      name: friendsNames[value],\n      photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n    });\n\n    setTimeout(() => {}, 100);\n  }\n};\n\nexport { http, httpPost, httpDELETE, fillFriendsList };\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styles from './Modal.module.scss';\n\nconst Modal = ({ bgColor, text }) => {\n    return (\n        <div className={styles.Modal} style={{ background: `${bgColor}` }}>\n            <p>\n                {text}\n            </p>\n        </div>\n    );\n};\n\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__32mLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createPost\":\"CreatePost_createPost__3XCbM\",\"__author\":\"CreatePost___author__2lcbm\"};","import { useEffect, useReducer } from 'react';\nimport { httpPost } from '../../libs/http';\nimport Modal from '../Modal';\nimport styles from './CreatePost.module.scss';\n\n//* SINTASSI CON USEREDUCER\n\nconst initialState = {\n    formPostObj:\n    {\n        author: '',\n        text:'',\n        photo: '',\n        date: new Date().toISOString(),\n    },\n    isModalVisible: false\n};\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'form':\n            return { ...state, formPostObj: { ...state.formPostObj, [action.value]: action.payload } };\n        case 'modal':\n            return { ...state, isModalVisible: action.payload };\n        default:\n            return state;\n    };\n};\n\nconst CreatePost = () => {\n    const [state, dispatch] = useReducer(formReducer, initialState);\n\n    const handleSendBtn = (e) => {\n        e.preventDefault();\n        httpPost('/posts', state.formPostObj);\n        dispatch({ type: 'modal', payload: !state.isModalVisible })\n        setTimeout(() => {\n            dispatch({ type: 'modal' })\n          }, 2000);\n\n        // setTimeout(() => {\n        //     isModalVisible(false);\n        // }, 2000);          <== chiedere come aggiungere settimeout\n    }; \n\n    useEffect(() => {\n        dispatch({ type: 'modal', payload: false });\n    }, [state.formPostObj]);\n\n    return (\n        <div className={styles.createPost}>\n            {/* {isModalVisible &&\n                <Modal bgColor={'#3498db'}\n                    text={'Your post has been published'} />} */}\n            <form>\n                <div className={styles.__author}>\n                    <input\n                        value={state.formPostObj.author}\n                        onChange={(e) => dispatch({ type: 'form', value: 'author', payload: e.target.value })}\n                        name='author'\n                        id='author'\n                        type='text'\n                        placeholder='Author'\n                        required />\n\n                    <input\n                        value={state.formPostObj.photo}\n                        onChange={(e) => dispatch({ type: 'form', value: 'photo', payload: e.target.value })}\n                        name='photo'\n                        id='photo'\n                        type='photo'\n                        placeholder='photo URL' />\n\n                    <button\n                        type='submit'\n                        onClick={handleSendBtn}>\n                        Send\n                    </button>\n                    {state.isModalVisible &&\n                        <Modal\n                            bgColor={'#3498db'}\n                            text={'Your post has been published'}\n                        />}\n\n                </div>\n\n                <textarea\n                    value={state.formPostObj.text}\n                    onChange={(e) => dispatch({ type: 'form', value: 'text', payload: e.target.value })}\n                    name='text'\n                    id='text'\n                    type='text'\n                    cols='30'\n                    rows='10'\n                    placeholder='text'\n                    required>\n                </textarea>\n            </form>\n        </div>\n    )\n};\n\nexport default CreatePost;\n\n//* SINTASSI CON USESTATE\n// const CreatePost = () => {\n//     const [authorInput, setAuthorInput] = useState('');\n//     const [photoInput, setphotoInput] = useState('');\n//     const [textInput, settextInput] = useState('');\n//     const [formPostObj, setFormPostObj] = useState({});\n//     const [isModalVisible, setModalVisible] = useState(false);\n\n//     // const handleAuthorInput = (event) => setAuthorInput(event.target.value); <= PREV.VALUE \n//     // const handlephotoInput = (event) => setphotoInput(event.target.value);\n//     // const handletextInput = (event) => settextInput(event.target.value);\n//     const handleSendBtn = (event) => {\n//         event.preventDefault();\n//         httpPost('/posts', formPostObj);\n//         setModalVisible(true);\n//         // alert('Your post has been created');\n\n//         setTimeout(() => {\n//             setModalVisible(false);\n//         }, 2000);\n//     };\n\n//     useEffect(() => {\n//         setFormPostObj({\n//             author: authorInput,\n//             text: textInput,\n//             date: new Date().toISOString(),\n//             photo: photoInput\n//         });\n//     }, [authorInput, photoInput, textInput])\n\n//     return (\n//         <div className={styles.createPost}>\n//         {isModalVisible && <Modal bgColor={'#3498db'} text={'Your post has been published'}/>}\n//             <form>\n//                 <div className={styles.__author}>\n//                     <input\n//                         value={authorInput}\n//                         onChange={(e) => setAuthorInput(e.target.value)}\n//                         name='author'\n//                         id='author'\n//                         type='text'\n//                         placeholder='Author'\n//                         required />\n\n//                     <input\n//                         value={photoInput}\n//                         onChange={(e) => setphotoInput(e.target.value)}\n//                         name='photo'\n//                         id='photo'\n//                         type='photo'\n//                         placeholder='photo URL' />\n\n//                     <button onClick={handleSendBtn} type='submit'>\n//                         SEND\n//                     </button>\n//                 </div>\n\n//                 <textarea\n//                     value={textInput}\n//                     onChange={(e) => settextInput(e.target.value)}\n//                     name='text'\n//                     id='text'\n//                     type='text'\n//                     cols='30'\n//                     rows='10'\n//                     placeholder='text'\n//                     required>\n//                 </textarea>\n//             </form>\n//         </div>\n//     )\n// };"],"sourceRoot":""}