{"version":3,"sources":["pages/Home/Home.module.scss","components/Header/Header.module.scss","components/CreatePost/CreatePost.module.scss","pages/Friends/Friends.module.scss","components/Footer/Footer.module.scss","components/MessagePreview/MessagePreview.module.scss","components/Post/Post.module.scss","components/FriendPreview/FriendPreview.module.scss","components/Header/Header.js","components/Footer/Footer.js","libs/http.js","components/CreatePost/index.jsx","components/Date/Date.jsx","components/MessagePreview/index.jsx","components/Post/index.jsx","components/FriendPreview/index.jsx","pages/Home/index.jsx","pages/Messages/index.jsx","components/CreateFriend/index.jsx","pages/Friends/index.jsx","components/Login/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","props","name","links","link","label","CheckActive","resolved","useResolvedPath","useMatch","path","pathname","end","styles","active","className","header","map","item","index","to","Footer","year","Date","getFullYear","footer","BASE_URL","http","resource","fetch","then","response","json","httpPost","data","method","headers","body","JSON","stringify","CreatePost","useState","authorInput","setAuthorInput","imgInput","setImgInput","messageInput","setMessageInput","formPostObj","setFormPostObj","useEffect","author","text","date","toISOString","photo","createPost","__author","value","onChange","e","target","id","type","placeholder","required","onClick","event","preventDefault","alert","cols","rows","DateInfo","formatRelative","relative","addSuffix","locale","it","MessagePreview","sender","message","Post","post","window","location","href","src","alt","FriendPreview","friend","friends","messages","posts","Home","friendsPreview","setFriendsPreview","allPosts","setAllPosts","messagesPreview","setMessagesPreview","reverse","home","grid","createPostBtn","Messages","CreateFriend","friendName","setFriendName","friendPhoto","setFriendPhoto","createFriend","__friend","Friends","friendsList","setFriendsList","__friendsList","Login","user","password","INIT_STATE","nav","reducer","state","action","App","useReducer","dispatch","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.244aeafe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JXvv\",\"grid\":\"Home_grid__sUtIT\",\"createPostBtn\":\"Home_createPostBtn__1BGTQ\",\"friend\":\"Home_friend__eOEhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"active\":\"Header_active__3GX0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createPost\":\"CreatePost_createPost__3XCbM\",\"__author\":\"CreatePost___author__2lcbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friends\":\"Friends_Friends__2IY9Z\",\"__friendsList\":\"Friends___friendsList__319r6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessagePreview_message__3j9dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3hqZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendPreview_friend__3Gjby\"};","import { Link, useMatch, useResolvedPath } from \"react-router-dom\";\nimport styles from \"./Header.module.scss\";\n\nconst Header = (props) => {\n\n    const name = props.name || 'App';                               \n    const links = props.links || [{ link: \"/\", label: \"Link\" }];    \n\n    const CheckActive = (link) => {\n        const resolved = useResolvedPath(link);\n        const match = useMatch({path: resolved.pathname, end: true});\n\n        return match ? styles.active : \"\";\n    };\n\n    return (\n        <header className={styles.header}>\n            <h1>{name}</h1>\n            <nav>\n                <ul>\n                    {links.map((item, index) => (\n                    <li key={index}>                            \n                        <Link className={CheckActive(item.link)} to={item.link}>{item.label}</Link>\n                    </li>\n                    ))}\n                </ul>\n            </nav>\n        </header>\n    );\n};\n\nexport default Header;\n","import styles from './Footer.module.scss';\n\nconst Footer = () => {\n    const year = new Date().getFullYear();                  //* per renderizzare sempre la data attuale\n    return (\n    <footer className={styles.footer}>\n        <hr />\n        <p>Copyright Edgemony - {year}</p>\n    </footer>\n    );\n};\n\nexport default Footer;","const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n  fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPost = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nconst httpDELETE = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n// Popola la lista degli amici, in base alla lista friendsNames\nconst fillFriendsList = (friendsNames) => {\n  let value = 0;\n  for (value in [...Array(friendsNames.length).keys()]) {\n    httpPost(\"/friends\", {\n      name: friendsNames[value],\n      photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n    });\n\n    setTimeout(() => {}, 100);\n  }\n};\n\nexport { http, httpPost, httpDELETE, fillFriendsList };\n","import { useState, useEffect } from 'react';\nimport { httpPost } from '../../libs/http';\nimport styles from './CreatePost.module.scss';\n\nconst CreatePost = () => {\n    const [authorInput, setAuthorInput] = useState('');\n    const [imgInput, setImgInput] = useState('');\n    const [messageInput, setMessageInput] = useState('');\n    const [formPostObj, setFormPostObj] = useState({});\n\n    // const handleAuthorInput = (event) => setAuthorInput(event.target.value); <= PREV.VALUE \n    // const handleImgInput = (event) => setImgInput(event.target.value);\n    // const handleMessageInput = (event) => setMessageInput(event.target.value);\n    const handleSendBtn = (event) => {\n        event.preventDefault();\n        httpPost('/posts', formPostObj);\n        alert('Your post has been created');\n    };\n\n    useEffect(() => {\n        setFormPostObj({\n            author: authorInput,\n            text: messageInput,\n            date: new Date().toISOString(),\n            photo: imgInput\n        });\n    }, [authorInput, imgInput, messageInput])\n\n    return (\n        <div className={styles.createPost}>\n            <form>\n                <div className={styles.__author}>\n                    <input\n                        value={authorInput}\n                        onChange={(e) => setAuthorInput(e.target.value)}\n                        name='author'\n                        id='author'\n                        type='text'\n                        placeholder='Author'\n                        required />\n\n                    <input\n                        value={imgInput}\n                        onChange={(e) => setImgInput(e.target.value)}\n                        name='img'\n                        id='img'\n                        type='img'\n                        placeholder='Img URL' />\n\n                    <button onClick={handleSendBtn} type='submit'>\n                        SEND\n                    </button>\n                </div>\n\n                <textarea\n                    value={messageInput}\n                    onChange={(e) => setMessageInput(e.target.value)}\n                    name='message'\n                    id='message'\n                    type='text'\n                    cols='30'\n                    rows='10'\n                    placeholder='message'\n                    required>\n                </textarea>\n            </form>\n        </div>\n    )\n};\n\nexport default CreatePost;","import { formatRelative } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\n\nconst DateInfo = (props) => {\n    return (\n        <>\n            {formatRelative(new Date(props.relative), new Date(), { addSuffix: true, locale: it })}\n        </>\n    );\n};\n\nexport { DateInfo };","import styles from \"./MessagePreview.module.scss\";\nimport { DateInfo } from \"./../Date/Date.jsx\";\n\nconst MessagePreview = (props) => {\n    const data = props.data || {\n        text: 'lorem ipsum', date: new Date(), sender: 'user',\n    };\n\n    return (\n        <div className={styles.message}>\n            <h5>{data.sender}</h5>\n            <p>\n                <small><DateInfo relative={data.date} /></small>\n            </p>\n            <p>{data.text}</p>\n        </div>\n    );\n};\n\nexport { MessagePreview };","import styles from './Post.module.scss';\nimport { DateInfo } from \"./../Date/Date.jsx\";\nimport { httpDELETE } from '../../libs/http';\n\nconst Post = (props) => {\n    const data = props.data || {\n        author: 'user',\n        text: 'text',\n        date: new Date(),\n        photo: 'https://images.unsplash.com/photo-1511149672083-577ee63de3dc?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1169&q=80'\n    };\n\n    const handleDeletePost = () => {\n        httpDELETE(`/posts/${props.data.id}`).then(() => {});\n        alert(`Post by ${props.author} was deleted`);\n        window.location.href = '/';\n    };\n\n    return (\n        <article className={styles.post}>\n            <button onClick={handleDeletePost}>X</button>\n            <h3>{data.author}</h3>\n            <p>\n                <small>{data.date ? <DateInfo relative={data.date} /> : <></>}</small>\n            </p>\n            <p>{data.text}</p>\n\n            {data.photo ? <img src={data.photo} alt={data.author} /> : <></>}\n        </article>\n    );\n};\n\nexport { Post };","import styles from \"./FriendPreview.module.scss\";\n\nconst FriendPreview = (props) => {\n    const data = props.data || {\n        name: 'Friend', \n        photo: 'https://64.media.tumblr.com/5d61946de95c9cc2bfd6107c122230ac/540f0b61cb5a11f6-85/s400x600/091bc0e2aa27eae3304290cd1fd59b22ea262b9c.png'\n    };                                                              // <= DATI DI PLACEHOLDER\n    return (\n        <div className={styles.friend}>\n            <img src={data.photo} alt={data.name} />\n            <p>{data.name}</p>\n        </div>\n    );\n};\n\nexport default FriendPreview;","import styles from './Home.module.scss';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MessagePreview } from '../../components/MessagePreview';\nimport { Post } from '../../components/Post';\nimport { http } from '../../libs/http';\nimport FriendPreview from '../../components/FriendPreview';\n\nconst friends = [];\n\nconst messages = [];\n\nconst posts = [];\n\nconst Home = () => {\n    const [friendsPreview, setFriendsPreview] = useState(friends);           // informazione che sarà monitorata dal componente React\n    const [allPosts, setAllPosts] = useState(posts);\n    const [messagesPreview, setMessagesPreview] = useState(messages);\n\n    useEffect(() => {\n        http('/friends?_limit=4').then(data => setFriendsPreview(data));\n        http('/posts').then(data => setAllPosts(data.reverse()));\n        http('/messages?_limit=4').then(data => setMessagesPreview(data));\n    }, []);\n\n    return (\n        <section className={styles.home}>\n            <h3>Benvenuto utente!</h3>\n            <div className={styles.grid}>\n                <aside>\n                    {friendsPreview.map((friend, index) => <FriendPreview key={index} data={friend} />)}\n                </aside>\n                <main>\n                    <Link to='/new-post'>\n                        <button className={styles.createPostBtn}>+ Create a new post!</button>\n                    </Link>\n                    {allPosts.map((post, index) => <Post key={index} data={post} />)}\n                </main>\n                <aside>\n                    {messagesPreview.map((message, index) => <MessagePreview key={index} data={message} />)}\n                </aside>\n            </div>\n        </section>\n    );\n};\n\nexport default Home;","// import styles from './Messages.module.scss';\n// import { useEffect, useState } from 'react';\n\n\nconst Messages = () => {\n    return (\n        <h1>prova render</h1>\n    )\n}\n\nexport default Messages;","import { useState, useEffect } from \"react\";\nimport { httpPost } from \"../../libs/http\";\nimport styles from \"./CreateFriend.module.scss\";\n\nconst CreateFriend = () => {\n  const [friendName, setFriendName] = useState(\"\");\n  const [friendPhoto, setFriendPhoto] = useState(\"\");\n  const [formPostObj, setFormPostObj] = useState({});\n\n  const handleSendBtn = (event) => {\n    event.preventDefault();\n    httpPost(\"/friends\", formPostObj);\n    alert(\"L'amico è stato aggiunto\");\n  };\n\n  useEffect(() => {\n    setFormPostObj({\n      name: friendName,\n      photo: friendPhoto,\n    });\n  }, [friendName, friendPhoto]);\n\n  return (\n    <div className={styles.createFriend}>\n      <form>\n        <div className={styles.__friend}>\n          <input\n            value={friendName}\n            onChange={(e) => setFriendName(e.target.value)}\n            name=\"friend\"\n            id=\"friend\"\n            type=\"text\"\n            placeholder=\"Friend name\"\n            required\n          />\n\n          <input\n            onChange={(e) => setFriendPhoto(e.target.value)}\n            value={friendPhoto}\n            name=\"photo\"\n            id=\"photo\"\n            type=\"text\"\n            placeholder=\"Photo URL\"\n          />\n\n          <button type=\"submit\" onClick={handleSendBtn}>\n            ADD\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateFriend;","import { useState, useEffect } from \"react\";\nimport CreateFriend from \"../../components/CreateFriend\";\nimport FriendPreview from \"../../components/FriendPreview\";\n// import Pagination from \"./../../components/Pagination\";\nimport { http } from \"../../libs/http\";\nimport styles from \"./Friends.module.scss\";\n\nconst Friends = () => {\n  const [friendsList, setFriendsList] = useState([]);\n  // const [pagination, setPagination] = useState(1);\n\n  useEffect(() => {\n    http(`/friends?_page=1`).then((friendsList) => setFriendsList(friendsList));\n  }, []);\n\n  return (\n    <div className={styles.Friends}>\n      <CreateFriend />\n\n      {/* <div>\n        <Pagination />\n      </div> */}\n\n      <div className={styles.__friendsList}>\n        {friendsList.map((friend) => (\n          <FriendPreview data={friend} key={friend.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Friends;","// import styles from './Login.module.scss';\n\nconst Login = (props) => {\n    const handleSendBtn = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <div className=\"loginWrapper\">\n            <h1>Please Log In</h1>\n            <form>\n                <div>\n                    <input\n                        value={props.user}\n                        onChange={(e) => ({ user: e.target.value })}\n                        name=\"username\"\n                        id=\"username\"\n                        type=\"text\"\n                        placeholder=\"UserName\"\n                        required\n                    />\n                    <input\n                        value={props.password}\n                        onChange={(e) => ({ password: e.target.value })}\n                        name=\"password\"\n                        id=\"password\"\n                        type=\"text\"\n                        placeholder=\"Password\"\n                    />\n                </div>\n                <button type=\"submit\" onClick={handleSendBtn}>Enter</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;","import { Routes, Route } from \"react-router-dom\";\nimport { useReducer } from \"react\";\n\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport CreatePost from \"./components/CreatePost\";\nimport Home from \"./pages/Home\";\nimport Messages from \"./pages/Messages\";\nimport Friends from \"./pages/Friends\";\nimport Login from \"./components/Login\";\n\nconst INIT_STATE = {\n  name: 'Feisbrut',\n  nav: [\n    { link: '/', label: 'Home' },\n    // { link: '/new-post', label: 'Create new post' },\n    { link: '/friends', label: 'Friends' },\n    { link: '/messages', label: 'Messages' },\n    { link: '/login', label: 'Login' }    \n  ],\n  friendsPreview: [],\n};\n\nconst reducer = (state, action) => {                                 // l'action è l'oggetto che reducer riceve dal dispatch\n  switch(action.type) {\n    case \"change-name\":\n      return {...state, name: 'Feisbell'};\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, INIT_STATE);\n\n  return (\n    <div>\n      <Header name={state.name} links={state.nav} />\n      <button onClick={() => dispatch({ type: \"change-name\" })}>Cambia nome</button>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/new-post\" element={<CreatePost />} />\n        <Route path=\"/messages\" element={<Messages />} />\n        <Route path=\"/friends\" element={<Friends />} />\n        <Route path=\"/login\" element={<Login />} />\n      </Routes>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}