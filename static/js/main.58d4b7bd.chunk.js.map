{"version":3,"sources":["pages/Home/Home.module.scss","pages/Friends/Friends.module.scss","components/Pagination/Pagination.module.scss","components/Header/Header.module.scss","components/CreatePost/CreatePost.module.scss","components/Footer/Footer.module.scss","components/Modal/Modal.module.scss","components/MessagePreview/MessagePreview.module.scss","components/Post/Post.module.scss","components/FriendPreview/FriendPreview.module.scss","pages/Login/Login.module.scss","components/Header/Header.js","components/Footer/Footer.js","libs/http.js","components/Modal/index.jsx","components/CreatePost/index.jsx","components/Date/Date.jsx","components/MessagePreview/index.jsx","components/Post/index.jsx","components/FriendPreview/index.jsx","pages/Home/index.jsx","pages/Messages/index.jsx","components/CreateFriend/index.jsx","components/Pagination/index.jsx","libs/general.js","pages/Friends/index.jsx","pages/Login/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","props","name","links","link","label","CheckActive","resolved","useResolvedPath","useMatch","path","pathname","end","styles","active","className","header","style","fontFamily","font","map","item","index","to","Footer","year","Date","getFullYear","footer","BASE_URL","http","resource","fetch","then","response","json","httpPost","data","method","headers","body","JSON","stringify","Modal","bgColor","text","background","CreatePost","useState","authorInput","setAuthorInput","imgInput","setImgInput","messageInput","setMessageInput","formPostObj","setFormPostObj","isModalVisible","setModalVisible","useEffect","author","date","toISOString","photo","createPost","__author","value","onChange","e","target","id","type","placeholder","required","onClick","event","preventDefault","setTimeout","cols","rows","DateInfo","formatRelative","relative","addSuffix","locale","it","MessagePreview","sender","message","Post","post","window","location","href","src","alt","FriendPreview","friend","friends","messages","posts","Home","friendsPreview","setFriendsPreview","allPosts","setAllPosts","messagesPreview","setMessagesPreview","reverse","home","grid","createPostBtn","Messages","CreateFriend","friendName","setFriendName","friendPhoto","setFriendPhoto","createFriend","__friend","Pagination","numOfElements","setActualButtonNum","totButtonNum","setTotButtonNum","friendsList","Math","ceil","length","paginationList","__prevAndNext","Array","keys","Friends","actualFriendsList","setActualFriendsList","actualButtonNum","__friendsList","__pagination","Login","userName","setUserName","password","setPassword","userData","setUserData","console","log","INIT_STATE","nav","reducer","state","action","App","useReducer","dispatch","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58d4b7bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JXvv\",\"grid\":\"Home_grid__sUtIT\",\"createPostBtn\":\"Home_createPostBtn__1BGTQ\",\"friend\":\"Home_friend__eOEhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friends\":\"Friends_Friends__2IY9Z\",\"__friendsList\":\"Friends___friendsList__319r6\",\"__pagination\":\"Friends___pagination__Z3NJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationList\":\"Pagination_paginationList__ru3We\",\"__prevAndNext\":\"Pagination___prevAndNext__2W61M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"active\":\"Header_active__3GX0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createPost\":\"CreatePost_createPost__3XCbM\",\"__author\":\"CreatePost___author__2lcbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__32mLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessagePreview_message__3j9dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3hqZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendPreview_friend__3Gjby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__2rkDV\"};","import { Link, useMatch, useResolvedPath } from \"react-router-dom\";\nimport styles from \"./Header.module.scss\";\n\nconst Header = (props) => {\n  const name = props.name || \"App\";\n  const links = props.links || [{ link: \"/\", label: \"Link\" }];\n\n  /* Versione \"custom\", si può ottenere lo stesso risultato anche solamente\n  usando il componente NavLink\n  https://reactrouter.com/docs/en/v6/api#navlink */\n  const CheckActive = (link) => {\n    const resolved = useResolvedPath(link);\n    const match = useMatch({ path: resolved.pathname, end: true });\n\n    return match ? styles.active : \"\";\n  };\n\n  return (\n    <header className={styles.header}>\n      <h1 style={{ fontFamily: props.font }}>{name}</h1>\n      <nav>\n        <ul>\n          {links.map((item, index) => (\n            <li key={index}>\n              <Link className={CheckActive(item.link)} to={item.link}>\n                {item.label}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import styles from './Footer.module.scss';\n\nconst Footer = () => {\n    const year = new Date().getFullYear();                  //* per renderizzare sempre la data attuale\n    return (\n    <footer className={styles.footer}>\n        <hr />\n        <p>Copyright Edgemony - {year}</p>\n    </footer>\n    );\n};\n\nexport default Footer;","const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n  fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPost = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nconst httpDELETE = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n// Popola la lista degli amici, in base alla lista friendsNames\nconst fillFriendsList = (friendsNames) => {\n  let value = 0;\n  for (value in [...Array(friendsNames.length).keys()]) {\n    httpPost(\"/friends\", {\n      name: friendsNames[value],\n      photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n    });\n\n    setTimeout(() => {}, 100);\n  }\n};\n\nexport { http, httpPost, httpDELETE, fillFriendsList };\n","import styles from './Modal.module.scss';\n\nconst Modal = ({ bgColor, text }) => {\n    return (\n        <div className={styles.Modal} style={{ background: `${bgColor}` }}>\n            <p>\n                {text}\n            </p>\n        </div>\n    );\n};\n\nexport default Modal;","import { useState, useEffect } from 'react';\nimport { httpPost } from '../../libs/http';\nimport Modal from '../Modal';\nimport styles from './CreatePost.module.scss';\n\n// const modal = () => {\n//     return (\n//         <div>Your post has been published</div>\n//     )\n// }\n\nconst CreatePost = () => {\n    const [authorInput, setAuthorInput] = useState('');\n    const [imgInput, setImgInput] = useState('');\n    const [messageInput, setMessageInput] = useState('');\n    const [formPostObj, setFormPostObj] = useState({});\n    const [isModalVisible, setModalVisible] = useState(false);\n\n    // const handleAuthorInput = (event) => setAuthorInput(event.target.value); <= PREV.VALUE \n    // const handleImgInput = (event) => setImgInput(event.target.value);\n    // const handleMessageInput = (event) => setMessageInput(event.target.value);\n    const handleSendBtn = (event) => {\n        event.preventDefault();\n        httpPost('/posts', formPostObj);\n        setModalVisible(true);\n        // alert('Your post has been created');\n\n        setTimeout(() => {\n            setModalVisible(false);\n        }, 2000);\n    };\n\n    useEffect(() => {\n        setFormPostObj({\n            author: authorInput,\n            text: messageInput,\n            date: new Date().toISOString(),\n            photo: imgInput\n        });\n    }, [authorInput, imgInput, messageInput])\n\n    return (\n        <div className={styles.createPost}>\n        {isModalVisible && <Modal bgColor={'#3498db'} text={'Your post has been published'}/>}\n            <form>\n                <div className={styles.__author}>\n                    <input\n                        value={authorInput}\n                        onChange={(e) => setAuthorInput(e.target.value)}\n                        name='author'\n                        id='author'\n                        type='text'\n                        placeholder='Author'\n                        required />\n\n                    <input\n                        value={imgInput}\n                        onChange={(e) => setImgInput(e.target.value)}\n                        name='img'\n                        id='img'\n                        type='img'\n                        placeholder='Img URL' />\n\n                    <button onClick={handleSendBtn} type='submit'>\n                        SEND\n                    </button>\n                </div>\n\n                <textarea\n                    value={messageInput}\n                    onChange={(e) => setMessageInput(e.target.value)}\n                    name='message'\n                    id='message'\n                    type='text'\n                    cols='30'\n                    rows='10'\n                    placeholder='message'\n                    required>\n                </textarea>\n            </form>\n        </div>\n    )\n};\n\nexport default CreatePost;","import { formatRelative } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\n\nconst DateInfo = (props) => {\n    return (\n        <>\n            {formatRelative(new Date(props.relative), new Date(), { addSuffix: true, locale: it })}\n        </>\n    );\n};\n\nexport { DateInfo };","import styles from \"./MessagePreview.module.scss\";\nimport { DateInfo } from \"./../Date/Date.jsx\";\n\nconst MessagePreview = (props) => {\n    const data = props.data || {\n        text: 'lorem ipsum', date: new Date(), sender: 'user',\n    };\n\n    return (\n        <div className={styles.message}>\n            <h5>{data.sender}</h5>\n            <p>\n                <small><DateInfo relative={data.date} /></small>\n            </p>\n            <p>{data.text}</p>\n        </div>\n    );\n};\n\nexport { MessagePreview };","import styles from './Post.module.scss';\nimport { useState } from 'react';\nimport { DateInfo } from \"./../Date/Date.jsx\";\nimport { httpDELETE } from '../../libs/http';\nimport Modal from '../Modal';\n\nconst Post = (props) => {\n    const data = props.data || {\n        author: 'user',\n        text: 'text',\n        date: new Date(),\n        photo: 'https://images.unsplash.com/photo-1511149672083-577ee63de3dc?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1169&q=80'\n    };\n\n    const handleDeletePost = () => {\n        httpDELETE(`/posts/${props.data.id}`).then(() => { });\n        // alert(`Post by ${props.author} was deleted`);\n        setModalVisible(true);\n\n        setTimeout(() => {\n            setModalVisible(false);\n            window.location.href = '/';\n        }, 2000);\n    };\n\n    const [isModalVisible, setModalVisible] = useState(false);\n\n    return (\n        <article className={styles.post}>\n            {isModalVisible && <Modal bgColor={'red'} text={'This post has been deleted'} />}\n            <button onClick={handleDeletePost}>X</button>\n            <h3>{data.author}</h3>\n            <p>\n                <small>{data.date ? <DateInfo relative={data.date} /> : <></>}</small>\n            </p>\n            <p>{data.text}</p>\n\n            {data.photo ? <img src={data.photo} alt={data.author} /> : <></>}\n        </article>\n    );\n};\n\nexport { Post };","import styles from \"./FriendPreview.module.scss\";\n\nconst FriendPreview = (props) => {\n    const data = props.data || {\n        name: 'Friend', \n        photo: 'https://64.media.tumblr.com/5d61946de95c9cc2bfd6107c122230ac/540f0b61cb5a11f6-85/s400x600/091bc0e2aa27eae3304290cd1fd59b22ea262b9c.png'\n    };                                                              // <= DATI DI PLACEHOLDER\n    return (\n        <div className={styles.friend}>\n            <img src={data.photo} alt={data.name} />\n            <p>{data.name}</p>\n        </div>\n    );\n};\n\nexport default FriendPreview;","import styles from './Home.module.scss';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MessagePreview } from '../../components/MessagePreview';\nimport { Post } from '../../components/Post';\nimport { http } from '../../libs/http';\nimport FriendPreview from '../../components/FriendPreview';\n\nconst friends = [];\n\nconst messages = [];\n\nconst posts = [];\n\nconst Home = () => {\n    const [friendsPreview, setFriendsPreview] = useState(friends);           // informazione che sarà monitorata dal componente React\n    const [allPosts, setAllPosts] = useState(posts);\n    const [messagesPreview, setMessagesPreview] = useState(messages);\n\n    useEffect(() => {\n        http('/friends?_limit=4').then(data => setFriendsPreview(data));\n        http('/posts').then(data => setAllPosts(data.reverse()));\n        http('/messages?_limit=4').then(data => setMessagesPreview(data));\n    }, []);\n\n    return (\n        <section className={styles.home}>\n            <h3>Welcome user!</h3>\n            <div className={styles.grid}>\n                <aside>\n                    {friendsPreview.map((friend, index) => <FriendPreview key={index} data={friend} />)}\n                </aside>\n                <main>\n                    <Link to='/new-post'>\n                        <button className={styles.createPostBtn}>+ Create a new post!</button>\n                    </Link>\n                    {allPosts.map((post, index) => <Post key={index} data={post} />)}\n                </main>\n                <aside>\n                    {messagesPreview.map((message, index) => <MessagePreview key={index} data={message} />)}\n                </aside>\n            </div>\n        </section>\n    );\n};\n\nexport default Home;","// import styles from './Messages.module.scss';\n// import { useEffect, useState } from 'react';\n\n\nconst Messages = () => {\n    return (\n        <h1>prova render</h1>\n    )\n}\n\nexport default Messages;","import { useState, useEffect } from \"react\";\nimport { httpPost } from \"../../libs/http\";\nimport styles from \"./CreateFriend.module.scss\";\nimport Modal from \"../Modal\";\n\nconst CreateFriend = () => {\n  const [friendName, setFriendName] = useState(\"\");\n  const [friendPhoto, setFriendPhoto] = useState(\"\");\n  const [formPostObj, setFormPostObj] = useState({});\n  const [isModalVisible, setModalVisible] = useState(false);\n\n  const handleSendBtn = (event) => {\n    event.preventDefault();\n    httpPost(\"/friends\", formPostObj);\n    // alert(\"L'amico è stato aggiunto\");\n    setModalVisible(true);\n\n    setTimeout(() => {\n      setModalVisible(false);\n    }, 2000);\n  };\n\n  useEffect(() => {\n    setFormPostObj({\n      name: friendName,\n      photo: friendPhoto,\n    });\n  }, [friendName, friendPhoto]);\n\n  return (\n    <div className={styles.createFriend}>\n      {isModalVisible && <Modal bgColor={'lightgreen'} text={'This contact has been added'} />}\n      <form>\n        <div className={styles.__friend}>\n          <input\n            value={friendName}\n            onChange={(e) => setFriendName(e.target.value)}\n            name=\"friend\"\n            id=\"friend\"\n            type=\"text\"\n            placeholder=\"Friend name\"\n            required\n          />\n\n          <input\n            onChange={(e) => setFriendPhoto(e.target.value)}\n            value={friendPhoto}\n            name=\"photo\"\n            id=\"photo\"\n            type=\"text\"\n            placeholder=\"Photo URL\"\n          />\n\n          <button type=\"submit\" onClick={handleSendBtn}>\n            ADD\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateFriend;","import { useState, useEffect } from \"react\";\nimport { http } from \"./../../libs/http\";\nimport { arrayGenerator } from \"./../../libs/general\";\nimport styles from \"./Pagination.module.scss\";\n\nconst Pagination = ({ setActualButtonNum }) => {\n  const [totButtonNum, setTotButtonNum] = useState([]);\n\n  useEffect(() => {\n    http(`/friends`).then((friendsList) => {\n      setTotButtonNum(Math.ceil(friendsList.length / 10));\n    });\n  });\n\n  return (\n    <ul className={styles.paginationList}>\n      <button className={styles.__prevAndNext}>← Prev</button>\n      {arrayGenerator(totButtonNum).map((index) => (\n        <li key={index}>\n          <button onClick={() => setActualButtonNum(index + 1)}>\n            {index + 1}\n          </button>\n        </li>\n      ))}\n      <button className={styles.__prevAndNext}>Next →</button>\n    </ul>\n  );\n};\n\nexport default Pagination;","const arrayGenerator = (numOfElements) => {\n    return [...Array(numOfElements).keys()];\n  };\n  \n  export { arrayGenerator };","import { useState, useEffect } from \"react\";\nimport CreateFriend from \"../../components/CreateFriend\";\nimport FriendPreview from \"../../components/FriendPreview\";\n// import Pagination from \"./../../components/Pagination\";\nimport { http } from \"../../libs/http\";\nimport styles from \"./Friends.module.scss\";\n\nimport Pagination from \"../../components/Pagination\";\n\nconst Friends = () => {\n  const [actualFriendsList, setActualFriendsList] = useState([]);\n  const [actualButtonNum, setActualButtonNum] = useState(1);\n\n  useEffect(() => {\n    http(`/friends?_page=${actualButtonNum}`).then((friendsList) =>\n      setActualFriendsList(friendsList)\n    );\n  }, [actualButtonNum]);\n\n  return (\n    <div className={styles.Friends}>\n      <CreateFriend />\n\n      <div className={styles.__friendsList}>\n        {actualFriendsList.map((friend) => (\n          <FriendPreview data={friend} key={friend.id} />\n        ))}\n      </div>\n\n      <div className={styles.__pagination}>\n        <Pagination setActualButtonNum={setActualButtonNum} />\n      </div>\n    </div>\n  );\n};\n\nexport default Friends;","import { useState, useEffect } from \"react\";\nimport styles from \"./Login.module.scss\";\n\nconst Login = () => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setUserData({\n      userName,\n      password,\n    });\n  };\n\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userData, setUserData] = useState({});\n\n  useEffect(() => {\n    console.log(userData);\n  }, [userData]);\n\n  return (\n    <form className={styles.Login}>\n      <input\n        value={userName}\n        onChange={(e) => setUserName(e.target.value)}\n        type=\"text\"\n        placeholder=\"Username\"\n        required\n      />\n      <input\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        type=\"password\"\n        placeholder=\"Password\"\n        required\n      />\n      <input onClick={handleSubmit} type=\"submit\" value=\"Login\" />\n    </form>\n  );\n};\n\nexport default Login;","import { Routes, Route } from \"react-router-dom\";\nimport { useReducer } from \"react\";\n\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport CreatePost from \"./components/CreatePost\";\nimport Home from \"./pages/Home\";\nimport Messages from \"./pages/Messages\";\nimport Friends from \"./pages/Friends\";\nimport Login from \"./pages/Login\";\n\nconst INIT_STATE = {\n  name: 'Feisbrut',\n  nav: [\n    { link: '/', label: 'Home' },\n    // { link: '/new-post', label: 'Create new post' },\n    { link: '/friends', label: 'Friends' },\n    { link: '/messages', label: 'Messages' },\n    { link: '/login', label: 'Login' }    \n  ],\n  friendsPreview: [],\n};\n\nconst reducer = (state, action) => {                                 // l'action è l'oggetto che reducer riceve dal dispatch\n  switch(action.type) {\n    case \"change-name\":\n      return {...state, name: 'Feisbell'};\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, INIT_STATE);\n\n  return (\n    <div>\n      <Header name={state.name} links={state.nav} />\n      <button onClick={() => dispatch({ type: \"change-name\" })}>Cambia nome</button>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/new-post\" element={<CreatePost />} />\n        <Route path=\"/messages\" element={<Messages />} />\n        <Route path=\"/friends\" element={<Friends />} />\n        <Route path=\"/login\" element={<Login />} />\n      </Routes>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}