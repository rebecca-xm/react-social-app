{"version":3,"sources":["libs/http.js","components/Modal/index.jsx","components/Modal/Modal.module.scss","components/FriendPreview/index.jsx","components/FriendPreview/FriendPreview.module.scss","pages/Home/Home.module.scss","components/MessagePreview/MessagePreview.module.scss","components/Post/Post.module.scss","components/Date/Date.jsx","components/MessagePreview/index.jsx","components/Post/index.jsx","pages/Home/index.jsx"],"names":["BASE_URL","http","resource","fetch","then","response","json","httpPost","data","method","headers","body","JSON","stringify","httpDELETE","Modal","bgColor","text","className","styles","style","background","module","exports","FriendPreview","props","name","photo","friend","src","alt","DateInfo","formatRelative","Date","relative","addSuffix","locale","it","MessagePreview","date","sender","message","Post","author","useState","isModalVisible","setModalVisible","post","onClick","id","setTimeout","window","location","href","friends","messages","posts","Home","friendsPreview","setFriendsPreview","allPosts","setAllPosts","messagesPreview","setMessagesPreview","useEffect","reverse","home","grid","map","index","to","createPostBtn"],"mappings":"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","file":"static/js/3.77e8fa9e.chunk.js","sourcesContent":["const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n  fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPost = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nconst httpDELETE = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n// Popola la lista degli amici, in base alla lista friendsNames\nconst fillFriendsList = (friendsNames) => {\n  let value = 0;\n  for (value in [...Array(friendsNames.length).keys()]) {\n    httpPost(\"/friends\", {\n      name: friendsNames[value],\n      photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n    });\n\n    setTimeout(() => {}, 100);\n  }\n};\n\nexport { http, httpPost, httpDELETE, fillFriendsList };\n","import styles from './Modal.module.scss';\n\nconst Modal = ({ bgColor, text }) => {\n    return (\n        <div className={styles.Modal} style={{ background: `${bgColor}` }}>\n            <p>\n                {text}\n            </p>\n        </div>\n    );\n};\n\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__32mLz\"};","import styles from \"./FriendPreview.module.scss\";\n\nconst FriendPreview = (props) => {\n    const data = props.data || {\n        name: 'Friend', \n        photo: 'https://64.media.tumblr.com/5d61946de95c9cc2bfd6107c122230ac/540f0b61cb5a11f6-85/s400x600/091bc0e2aa27eae3304290cd1fd59b22ea262b9c.png'\n    };                                                              // <= DATI DI PLACEHOLDER\n    return (\n        <div className={styles.friend}>\n            <img src={data.photo} alt={data.name} />\n            <p>{data.name}</p>\n        </div>\n    );\n};\n\nexport default FriendPreview;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendPreview_friend__3Gjby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JXvv\",\"grid\":\"Home_grid__sUtIT\",\"createPostBtn\":\"Home_createPostBtn__1BGTQ\",\"friend\":\"Home_friend__eOEhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessagePreview_message__3j9dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3hqZB\"};","import { formatRelative } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\n\nconst DateInfo = (props) => {\n    return (\n        <>\n            {formatRelative(new Date(props.relative), new Date(), { addSuffix: true, locale: it })}\n        </>\n    );\n};\n\nexport { DateInfo };","import styles from \"./MessagePreview.module.scss\";\nimport { DateInfo } from \"./../Date/Date.jsx\";\n\nconst MessagePreview = (props) => {\n    const data = props.data || {\n        text: 'lorem ipsum', date: new Date(), sender: 'user',\n    };\n\n    return (\n        <div className={styles.message}>\n            <h5>{data.sender}</h5>\n            <p>\n                <small><DateInfo relative={data.date} /></small>\n            </p>\n            <p>{data.text}</p>\n        </div>\n    );\n};\n\nexport { MessagePreview };","import styles from './Post.module.scss';\nimport { useState } from 'react';\nimport { DateInfo } from \"./../Date/Date.jsx\";\nimport { httpDELETE } from '../../libs/http';\nimport Modal from '../Modal';\n\nconst Post = (props) => {\n    const data = props.data || {\n        author: 'user',\n        text: 'text',\n        date: new Date(),\n        photo: 'https://images.unsplash.com/photo-1511149672083-577ee63de3dc?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1169&q=80'\n    };\n\n    const handleDeletePost = () => {\n        httpDELETE(`/posts/${props.data.id}`).then(() => { });\n        // alert(`Post by ${props.author} was deleted`);\n        setModalVisible(true);\n\n        setTimeout(() => {\n            setModalVisible(false);\n            window.location.href = '/';\n        }, 2000);\n    };\n\n    const [isModalVisible, setModalVisible] = useState(false);\n\n    return (\n        <article className={styles.post}>\n            {isModalVisible && <Modal bgColor={'red'} text={'This post has been deleted'} />}\n            <button onClick={handleDeletePost}>X</button>\n            <h3>{data.author}</h3>\n            <p>\n                <small>{data.date ? <DateInfo relative={data.date} /> : <></>}</small>\n            </p>\n            <p>{data.text}</p>\n\n            {data.photo ? <img src={data.photo} alt={data.author} /> : <></>}\n        </article>\n    );\n};\n\nexport { Post };","import styles from './Home.module.scss';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MessagePreview } from '../../components/MessagePreview';\nimport { Post } from '../../components/Post';\nimport { http } from '../../libs/http';\nimport FriendPreview from '../../components/FriendPreview';\n\nconst friends = [];\n\nconst messages = [];\n\nconst posts = [];\n\nconst Home = () => {\n    const [friendsPreview, setFriendsPreview] = useState(friends);           // informazione che sarÃ  monitorata dal componente React\n    const [allPosts, setAllPosts] = useState(posts);\n    const [messagesPreview, setMessagesPreview] = useState(messages);\n\n    useEffect(() => {\n        http('/friends?_limit=4').then(data => setFriendsPreview(data));\n        http('/posts').then(data => setAllPosts(data.reverse()));\n        http('/messages?_limit=4').then(data => setMessagesPreview(data));\n    }, []);\n\n    return (\n        <section className={styles.home}>\n            <h3>Welcome user!</h3>\n            <div className={styles.grid}>\n                <aside>\n                    {friendsPreview.map((friend, index) => <FriendPreview key={index} data={friend} />)}\n                </aside>\n                <main>\n                    <Link to='/new-post'>\n                        <button className={styles.createPostBtn}>+ Create a new post!</button>\n                    </Link>\n                    {allPosts.map((post, index) => <Post key={index} data={post} />)}\n                </main>\n                <aside>\n                    {messagesPreview.map((message, index) => <MessagePreview key={index} data={message} />)}\n                </aside>\n            </div>\n        </section>\n    );\n};\n\nexport default Home;"],"sourceRoot":""}